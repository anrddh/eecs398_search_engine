After documents are stored to disk by the PageStore class, the IndexChunkBuilder class will create the inverted word index and also store that to disk. The Index Chunk file will have the following format:

The whole file:

1) 4 bytes: the first 4 bytes in the file will have the value 1, to determine endianess.
2) 4 bytes: number of tokens
3) 4 bytes: the length of the dictionary
4) The dictionary: which is of size 4 bytes * length of dictionary
5) EOD posting list (null terminated)
6) Posting lists

The EOD posting list:
1) 1 byte (null character)
2) 4 bytes (num documents)
3) 4 bytes (num occurences)
4) Skip table (fixed size)

A posting list:
1) word (null terminated)
2) 4 bytes: the number of documents in the posting list
3) 4 bytes: number of occurences i.e. length of the posting list
4) Skip table (fixed size)

A post:
1) 1 byte of word info (bold, italic, etc)
2) 1 to 4 bytes of offset to previous occurrence of word
NOTE: The read_number function in IndexEntry.hpp considers the total number of bytes of a post, INCLUDING the 2 bits used to indicate length
